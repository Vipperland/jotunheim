<?php
/**
 * Generated by Haxe 4.3.0
 */

namespace jotun\php\file;

use \php\_Boot\HxAnon;
use \php\Boot;
use \jotun\utils\Dice;

/**
 * ...
 * @author Rafael Moreira
 */
class FileCollection {
	/**
	 * @var FileInfo[]|\Array_hx
	 */
	public $list;
	/**
	 * @var mixed
	 */
	public $named;

	/**
	 * @return void
	 */
	public function __construct () {
		#src/jotun/php/file/FileCollection.hx:12: characters 29-31
		$this->named = new HxAnon();
		#src/jotun/php/file/FileCollection.hx:10: characters 36-38
		$this->list = new \Array_hx();
		#src/jotun/php/file/FileCollection.hx:15: characters 3-12
		$this->list = new \Array_hx();
		#src/jotun/php/file/FileCollection.hx:16: characters 3-13
		$this->named = new \Array_hx();
	}

	/**
	 * Add a file to collection
	 * @param	part
	 * @param	file
	 * 
	 * @param string $part
	 * @param FileInfo $file
	 * 
	 * @return void
	 */
	public function add ($part, $file) {
		#src/jotun/php/file/FileCollection.hx:25: characters 3-27
		$this->list->offsetSet($this->list->length, $file);
		#src/jotun/php/file/FileCollection.hx:26: lines 26-28
		if ($part !== null) {
			#src/jotun/php/file/FileCollection.hx:27: characters 4-39
			\Reflect::setField($this->named, $part, $file);
		}
	}

	/**
	 * Get a file by index
	 * @param	index
	 * @return
	 * 
	 * @param int $index
	 * 
	 * @return FileInfo
	 */
	public function getByIndex ($index) {
		#src/jotun/php/file/FileCollection.hx:46: characters 11-30
		$a = $this->list->length;
		$aNeg = $a < 0;
		$bNeg = $index < 0;
		#src/jotun/php/file/FileCollection.hx:46: characters 10-52
		if (($aNeg !== $bNeg ? $aNeg : $a > $index)) {
			#src/jotun/php/file/FileCollection.hx:46: characters 34-45
			return ($this->list->arr[$index] ?? null);
		} else {
			#src/jotun/php/file/FileCollection.hx:46: characters 48-52
			return null;
		}
	}

	/**
	 * Get file by form name
	 * @param	name
	 * @return
	 * 
	 * @param string $name
	 * 
	 * @return FileInfo
	 */
	public function getByName ($name) {
		#src/jotun/php/file/FileCollection.hx:37: characters 3-36
		return \Reflect::field($this->named, $name);
	}

	/**
	 * Get files by type
	 * @param	type If not specified, will return a categorized object as result
	 * @return
	 * 
	 * @param string $type
	 * 
	 * @return mixed
	 */
	public function getByType ($type = "*") {
		#src/jotun/php/file/FileCollection.hx:68: lines 68-84
		if ($type === null) {
			$type = "*";
		}
		#src/jotun/php/file/FileCollection.hx:69: characters 3-41
		$r = ($type === "*" ? new HxAnon() : new \Array_hx());
		#src/jotun/php/file/FileCollection.hx:70: lines 70-82
		Dice::Values($this->list, function ($v) use (&$r, &$type) {
			#src/jotun/php/file/FileCollection.hx:71: lines 71-81
			if ($type === "*") {
				#src/jotun/php/file/FileCollection.hx:73: lines 73-75
				if ($v->type === $type) {
					#src/jotun/php/file/FileCollection.hx:74: characters 6-21
					$r[Boot::dynamicField($r, 'length')] = $v;
				}
			} else {
				#src/jotun/php/file/FileCollection.hx:78: lines 78-79
				if (!\Reflect::hasField($r, $v->type)) {
					#src/jotun/php/file/FileCollection.hx:79: characters 6-37
					\Reflect::setField($r, $v->type, new \Array_hx());
				}
				#src/jotun/php/file/FileCollection.hx:80: characters 5-37
				\Reflect::field($r, $v->type)->push($v);
			}
		});
		#src/jotun/php/file/FileCollection.hx:83: characters 3-11
		return $r;
	}

	/**
	 * Get the output list of file names
	 * @return
	 * 
	 * @return string[]|\Array_hx
	 */
	public function getFileNames () {
		#src/jotun/php/file/FileCollection.hx:54: characters 3-28
		$r = new \Array_hx();
		#src/jotun/php/file/FileCollection.hx:55: lines 55-59
		Dice::Values($this->list, function ($v) use (&$r) {
			#src/jotun/php/file/FileCollection.hx:56: lines 56-58
			if ($v->type === "image") {
				#src/jotun/php/file/FileCollection.hx:57: characters 5-27
				$r->offsetSet($r->length, $v->output);
			}
		});
		#src/jotun/php/file/FileCollection.hx:60: characters 3-11
		return $r;
	}
}

Boot::registerClass(FileCollection::class, 'jotun.php.file.FileCollection');
