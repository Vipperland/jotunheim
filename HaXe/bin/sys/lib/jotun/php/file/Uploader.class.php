<?php

// Generated by Haxe 3.4.7
class jotun_php_file_Uploader {
	public function __construct(){}
	static $files;
	static $savePathImg = "upload/images/";
	static $savePathDoc = "upload/documents/";
	static function sizes() { $args = func_get_args(); return call_user_func_array(self::$sizes, $args); }
	static $sizes;
	static function set($imgPath, $docPath = null) {
		jotun_php_file_Uploader::$savePathImg = $imgPath;
		if($docPath !== null) {
			jotun_php_file_Uploader::$savePathDoc = $docPath;
		}
	}
	static function save($optSizes = null) {
		if($optSizes !== null) {
			jotun_utils_Dice::Values($optSizes, array(new _hx_lambda(array(), "jotun_php_file_Uploader_0"), 'execute'), null);
		}
		jotun_php_file_Uploader::_verify();
		return jotun_php_file_Uploader::$files;
	}
	static function _getType($file) {
		$ext = strtolower(_hx_explode(".", $file)->pop());
		switch($ext) {
		case "gif":case "jpeg":case "jpg":case "png":{
			return "image";
		}break;
		default:{
			return "document";
		}break;
		}
	}
	static function _getSavePath($type, $sufix = null) {
		if($sufix === null) {
			$sufix = "";
		}
		if($type === "image") {
			return _hx_string_or_null(jotun_php_file_Uploader::$savePathImg) . _hx_string_or_null($sufix);
		} else {
			return _hx_string_or_null(jotun_php_file_Uploader::$savePathDoc) . _hx_string_or_null($sufix);
		}
	}
	static function _verify() {
		$partName = null;
		$lastFile = null;
		$fileStream = null;
		php_Web::parseMultipart(array(new _hx_lambda(array(&$fileStream, &$lastFile, &$partName), "jotun_php_file_Uploader_1"), 'execute'), array(new _hx_lambda(array(&$fileStream), "jotun_php_file_Uploader_2"), 'execute'));
		if($fileStream !== null) {
			$fileStream->close();
		}
		if(_hx_field(jotun_php_file_Uploader::$sizes, "length") > 0) {
			$image = new jotun_php_file_Image(null);
			jotun_utils_Dice::Values(jotun_php_file_Uploader::$files->{"list"}, array(new _hx_lambda(array(&$image), "jotun_php_file_Uploader_3"), 'execute'), null);
		}
	}
	function __toString() { return 'jotun.php.file.Uploader'; }
}
jotun_php_file_Uploader::$files = new jotun_php_file_FileCollection();
jotun_php_file_Uploader::$sizes = (new _hx_array(array()));
function jotun_php_file_Uploader_0($v) {
	{
		$tmp = jotun_php_file_Uploader::$sizes;
		$tmp1 = _hx_field(jotun_php_file_Uploader::$sizes, "length");
		$tmp2 = null;
		if(Std::is($v, _hx_qtype("Array"))) {
			$tmp3 = null;
			if(_hx_equal(_hx_field($v, "length"), 1)) {
				$tmp3 = $v[0];
			} else {
				$tmp3 = $v[1];
			}
			$tmp2 = _hx_anonymous(array("w" => $v[0], "h" => $tmp3));
		} else {
			$tmp2 = _hx_anonymous(array("w" => $v, "h" => $v));
		}
		$tmp[$tmp1] = $tmp2;
	}
}
function jotun_php_file_Uploader_1(&$fileStream, &$lastFile, &$partName, $part, $name) {
	{
		if(jotun_tools_Utils::isValid($name, null)) {
			$tmp = null;
			if($name !== null) {
				$tmp = $lastFile !== $name;
			} else {
				$tmp = false;
			}
			if($tmp) {
				$partName = $part;
				$lastFile = $name;
				if($fileStream !== null) {
					$fileStream->close();
				}
				$type = jotun_php_file_Uploader::_getType($name);
				if($type !== null) {
					$int = jotun_Jotun::$tick;
					$nName = null;
					if($int < 0) {
						$nName = 4294967296.0 + $int;
					} else {
						$nName = $int + 0.0;
					}
					$nName1 = Std::string($nName) . "_";
					$nName2 = _hx_string_or_null($nName1) . _hx_string_or_null(jotun_tools_Key::GEN(8, null, null)) . ".";
					$nName3 = _hx_string_or_null($nName2) . _hx_string_or_null(_hx_explode(".", $name)->pop());
					$fileStream = sys_io_File::write(jotun_php_file_Uploader::_getSavePath($type, $nName3), true);
					$tmp1 = jotun_php_file_Uploader::$files;
					$tmp1->add($part, new jotun_php_file_FileInfo($type, $name, $nName3));
				}
			}
		} else {
			$fileStream = null;
		}
	}
}
function jotun_php_file_Uploader_2(&$fileStream, $bytes, $pos, $len) {
	{
		if($fileStream !== null) {
			$fileStream->writeBytes($bytes, 0, $bytes->length);
		}
	}
}
function jotun_php_file_Uploader_3(&$image, $v) {
	{
		if($v->type === "image") {
			jotun_utils_Dice::Values(jotun_php_file_Uploader::$sizes, array(new _hx_lambda(array(&$image, &$v), "jotun_php_file_Uploader_4"), 'execute'), null);
		}
	}
}
function jotun_php_file_Uploader_4(&$image, &$v, $s) {
	{
		$p = _hx_string_or_null(jotun_php_file_Uploader::$savePathImg) . _hx_string_or_null($v->output);
		$image->open($p);
		$image->save(null, null);
		$image->fit(_hx_field($s, "w"), _hx_field($s, "h"));
		$nname = _hx_explode(".", $v->output);
		$ext = $nname->pop();
		$ext1 = _hx_string_or_null($nname->join(".")) . "_";
		$ext2 = _hx_string_or_null($ext1) . Std::string(_hx_field($s, "w")) . "x";
		$ext = _hx_string_or_null($ext2) . Std::string(_hx_field($s, "h")) . "." . _hx_string_or_null($ext);
		$image->save(_hx_string_or_null(jotun_php_file_Uploader::$savePathImg) . _hx_string_or_null($ext), null);
	}
}
