<?php
/**
 * Generated by Haxe 4.3.6
 */

namespace jotun\php\file;

use \php\_Boot\HxAnon;
use \jotun\tools\Key;
use \php\Boot;
use \jotun\Jotun;
use \jotun\tools\Utils;
use \jotun\utils\Dice;
use \sys\io\File;
use \php\_Boot\HxString;
use \sys\FileSystem;

/**
 * ...
 * @author Rafael Moreira <rafael@gateofsirius.com>
 */
class Uploader {
	/**
	 * @var bool
	 */
	static public $_autoRename;
	/**
	 * @var \Closure
	 */
	static public $_log_method;
	/**
	 * @var string
	 */
	static public $_path = "/";
	/**
	 * @var mixed[]|\Array_hx
	 */
	static public $_sizes;
	/**
	 * @var FileCollection
	 */
	static public $files;

	/**
	 * @param IImage $image
	 * 
	 * @return void
	 */
	public static function _delete ($image) {
		#src/jotun/php/file/Uploader.hx:184: characters 3-17
		$image->delete();
		#src/jotun/php/file/Uploader.hx:185: characters 3-18
		$image->dispose();
		#src/jotun/php/file/Uploader.hx:186: characters 3-35
		Uploader::_log("deleted", new HxAnon(["file" => $image]));
	}

	/**
	 * @param string $action
	 * @param mixed $message
	 * 
	 * @return void
	 */
	public static function _log ($action, $message) {
		#src/jotun/php/file/Uploader.hx:49: lines 49-51
		if (Uploader::$_log_method !== null) {
			#src/jotun/php/file/Uploader.hx:50: characters 4-32
			(Uploader::$_log_method)($action, $message);
		}
	}

	/**
	 * @param string $o
	 * @param string $p
	 * @param string $t
	 * 
	 * @return string
	 */
	public static function _rename ($o, $p, $t) {
		#src/jotun/php/file/Uploader.hx:190: characters 3-38
		$n = HxString::split($o, ".");
		#src/jotun/php/file/Uploader.hx:191: characters 18-25
		if ($n->length > 0) {
			$n->length--;
		}
		#src/jotun/php/file/Uploader.hx:191: characters 3-26
		$e = \array_pop($n->arr);
		#src/jotun/php/file/Uploader.hx:192: lines 192-194
		if ($p !== null) {
			#src/jotun/php/file/Uploader.hx:193: characters 4-19
			$n->offsetSet($n->length, $p);
		}
		#src/jotun/php/file/Uploader.hx:195: characters 3-28
		$n->arr[$n->length++] = ($t === null ? $e : $t);
		#src/jotun/php/file/Uploader.hx:196: characters 3-21
		return $n->join(".");
	}

	/**
	 * @return void
	 */
	public static function _verify () {
		#src/jotun/php/file/Uploader.hx:80: characters 3-30
		$partName = null;
		#src/jotun/php/file/Uploader.hx:81: characters 3-30
		$lastFile = null;
		#src/jotun/php/file/Uploader.hx:82: characters 3-36
		$fileStream = null;
		#src/jotun/php/file/Uploader.hx:85: lines 85-115
		Jotun::$domain->parseFiles(function ($part, $name) use (&$partName, &$fileStream, &$lastFile) {
			#src/jotun/php/file/Uploader.hx:88: lines 88-107
			if (Utils::isValid($name)) {
				#src/jotun/php/file/Uploader.hx:89: lines 89-104
				if (($name !== null) && ($lastFile !== $name)) {
					#src/jotun/php/file/Uploader.hx:90: characters 7-22
					$partName = $part;
					#src/jotun/php/file/Uploader.hx:91: characters 7-22
					$lastFile = $name;
					#src/jotun/php/file/Uploader.hx:93: lines 93-95
					if ($fileStream !== null) {
						#src/jotun/php/file/Uploader.hx:94: characters 8-26
						$fileStream->close();
					}
					#src/jotun/php/file/Uploader.hx:97: characters 24-45
					$_this = HxString::split($name, ".");
					if ($_this->length > 0) {
						$_this->length--;
					}
					#src/jotun/php/file/Uploader.hx:97: characters 7-46
					$ext = \array_pop($_this->arr);
					#src/jotun/php/file/Uploader.hx:98: characters 7-89
					$nName = null;
					#src/jotun/php/file/Uploader.hx:98: characters 26-88
					if (Uploader::$_autoRename) {
						#src/jotun/php/file/Uploader.hx:98: characters 40-50
						$nName1 = null;
						if (Jotun::$time === null) {
							$nName1 = "null";
						} else {
							$int = Jotun::$time;
							$nName1 = \Std::string(($int < 0 ? 4294967296.0 + $int : $int + 0.0));
						}
						#src/jotun/php/file/Uploader.hx:98: characters 7-89
						$nName = ($nName1??'null') . "_" . (Key::GEN(8)??'null') . "." . ($ext??'null');
					} else {
						$nName = $name;
					}
					#src/jotun/php/file/Uploader.hx:100: characters 7-51
					$fileStream = File::write((Uploader::$_path??'null') . ($nName??'null'), true);
					#src/jotun/php/file/Uploader.hx:101: characters 7-58
					$file = new FileInfo($ext, $name, $nName);
					#src/jotun/php/file/Uploader.hx:102: characters 7-28
					Uploader::$files->add($part, $file);
					#src/jotun/php/file/Uploader.hx:103: characters 7-29
					Uploader::_log("uploaded", $file);
				}
			} else {
				#src/jotun/php/file/Uploader.hx:106: characters 6-23
				$fileStream = null;
			}
		}, function ($bytes, $pos, $len) use (&$fileStream) {
			#src/jotun/php/file/Uploader.hx:111: lines 111-113
			if ($fileStream !== null) {
				#src/jotun/php/file/Uploader.hx:112: characters 6-51
				$fileStream->writeBytes($bytes, 0, $bytes->length);
			}
		});
		#src/jotun/php/file/Uploader.hx:118: lines 118-120
		if ($fileStream !== null) {
			#src/jotun/php/file/Uploader.hx:119: characters 4-22
			$fileStream->close();
		}
		#src/jotun/php/file/Uploader.hx:123: lines 123-179
		if (Uploader::$_sizes !== null) {
			#src/jotun/php/file/Uploader.hx:124: characters 4-35
			$image = new Image();
			#src/jotun/php/file/Uploader.hx:125: lines 125-178
			Dice::Values(Uploader::$files->list, function ($v) use (&$image) {
				#src/jotun/php/file/Uploader.hx:126: lines 126-177
				if ($v->get_image()) {
					#src/jotun/php/file/Uploader.hx:127: characters 6-18
					$v->sizes = new \Array_hx();
					#src/jotun/php/file/Uploader.hx:128: characters 6-25
					$delete = false;
					#src/jotun/php/file/Uploader.hx:132: lines 132-172
					Dice::All(Uploader::$_sizes, function ($p, $trfm) use (&$delete, &$v, &$image) {
						#src/jotun/php/file/Uploader.hx:134: characters 7-39
						$o = (Uploader::$_path??'null') . ($v->output??'null');
						#src/jotun/php/file/Uploader.hx:136: characters 7-20
						$image->open($o);
						#src/jotun/php/file/Uploader.hx:138: characters 7-45
						$create = Boot::dynamicField($trfm, 'create') === true;
						#src/jotun/php/file/Uploader.hx:139: characters 7-113
						$resize = (Boot::dynamicField($trfm, 'width') !== null) && (Boot::dynamicField($trfm, 'height') !== null) && $image->isOutBounds(Boot::dynamicField($trfm, 'width'), Boot::dynamicField($trfm, 'height'));
						#src/jotun/php/file/Uploader.hx:140: characters 7-67
						$convert = (Boot::dynamicField($trfm, 'type') !== null) && ($v->type !== Boot::dynamicField($trfm, 'type'));
						#src/jotun/php/file/Uploader.hx:141: characters 7-49
						$rename = Boot::dynamicField($trfm, 'renameFunc') !== null;
						#src/jotun/php/file/Uploader.hx:143: lines 143-145
						if (Boot::dynamicField($trfm, 'path') !== null) {
							#src/jotun/php/file/Uploader.hx:144: characters 8-32
							$o = \Std::string(Boot::dynamicField($trfm, 'path')) . ($v->output??'null');
						}
						#src/jotun/php/file/Uploader.hx:147: lines 147-149
						if ($rename) {
							#src/jotun/php/file/Uploader.hx:148: characters 8-45
							$o = Uploader::_rename($o, Boot::dynamicField($trfm, 'sufix'), Boot::dynamicField($trfm, 'type'));
						}
						#src/jotun/php/file/Uploader.hx:151: lines 151-153
						if (Boot::dynamicField($trfm, 'renameFunc') !== null) {
							#src/jotun/php/file/Uploader.hx:152: characters 8-30
							$o = $trfm->renameFunc($o);
						}
						#src/jotun/php/file/Uploader.hx:155: lines 155-157
						if ($resize) {
							#src/jotun/php/file/Uploader.hx:156: characters 8-42
							$image->fit(Boot::dynamicField($trfm, 'width'), Boot::dynamicField($trfm, 'height'));
						}
						#src/jotun/php/file/Uploader.hx:159: lines 159-166
						if ($create || $rename || $resize || $convert) {
							#src/jotun/php/file/Uploader.hx:160: characters 8-46
							$image->save($o, Boot::dynamicField($trfm, 'type'), Boot::dynamicField($trfm, 'quality'));
							#src/jotun/php/file/Uploader.hx:161: lines 161-163
							if (Boot::dynamicField($trfm, 'id') === null) {
								#src/jotun/php/file/Uploader.hx:162: characters 9-51
								$trfm->id = ($image->width??'null') . "x" . ($image->height??'null');
							}
							#src/jotun/php/file/Uploader.hx:164: characters 8-90
							$_this = $v->sizes;
							$x = new HxAnon([
								"width" => $image->width,
								"image" => Boot::dynamicField($trfm, 'height'),
								"url" => $o,
								"id" => Boot::dynamicField($trfm, 'id'),
							]);
							$_this->arr[$_this->length++] = $x;
							#src/jotun/php/file/Uploader.hx:165: characters 8-115
							Uploader::_log("changed", new HxAnon([
								"file" => $v,
								"size" => $trfm,
								"created" => $create,
								"rename" => $rename,
								"resize" => $resize,
								"convert" => $convert,
							]));
						}
						#src/jotun/php/file/Uploader.hx:168: lines 168-170
						if (!$delete && Boot::dynamicField($trfm, 'delete')) {
							#src/jotun/php/file/Uploader.hx:169: characters 8-21
							$delete = true;
						}
					});
					#src/jotun/php/file/Uploader.hx:173: lines 173-176
					if ($delete && $image->isValid()) {
						#src/jotun/php/file/Uploader.hx:174: characters 7-35
						$image->open((Uploader::$_path??'null') . ($v->output??'null'));
						#src/jotun/php/file/Uploader.hx:175: characters 7-21
						Uploader::_delete($image);
					}
				}
			});
		}
	}

	/**
	 * @param string $q
	 * 
	 * @return void
	 */
	public static function createPath ($q) {
		#src/jotun/php/file/Uploader.hx:36: characters 3-21
		$p = "";
		#src/jotun/php/file/Uploader.hx:37: lines 37-45
		Dice::Values(HxString::split($q, "/"), function ($v) use (&$q, &$p) {
			#src/jotun/php/file/Uploader.hx:38: lines 38-44
			if (mb_strlen($v) > 0) {
				#src/jotun/php/file/Uploader.hx:39: characters 5-17
				$p = ($p??'null') . ($v??'null') . "/";
				#src/jotun/php/file/Uploader.hx:40: characters 10-30
				\clearstatcache(true, $p);
				#src/jotun/php/file/Uploader.hx:40: lines 40-43
				if (!\file_exists($p) || !FileSystem::isDirectory($p)) {
					#src/jotun/php/file/Uploader.hx:41: characters 6-77
					mkdir($p,0777);
					#src/jotun/php/file/Uploader.hx:42: characters 6-29
					Uploader::_log("path:created", $q);
				}
			}
		});
	}

	/**
	 * @param \Closure $method
	 * 
	 * @return void
	 */
	public static function onLog ($method) {
		#src/jotun/php/file/Uploader.hx:32: characters 3-23
		Uploader::$_log_method = $method;
	}

	/**
	 * @param string $path
	 * @param mixed[]|\Array_hx $sizes
	 * @param bool $rename
	 * 
	 * @return FileCollection
	 */
	public static function save ($path, $sizes = null, $rename = true) {
		#src/jotun/php/file/Uploader.hx:54: lines 54-76
		if ($rename === null) {
			$rename = true;
		}
		#src/jotun/php/file/Uploader.hx:56: characters 3-23
		Uploader::$_autoRename = $rename;
		#src/jotun/php/file/Uploader.hx:58: lines 58-61
		if (Uploader::$_path !== $path) {
			#src/jotun/php/file/Uploader.hx:59: characters 4-20
			Uploader::createPath($path);
			#src/jotun/php/file/Uploader.hx:60: characters 4-16
			Uploader::$_path = $path;
		}
		#src/jotun/php/file/Uploader.hx:63: lines 63-71
		if ($sizes !== null) {
			#src/jotun/php/file/Uploader.hx:64: characters 4-18
			Uploader::$_sizes = $sizes;
			#src/jotun/php/file/Uploader.hx:65: lines 65-69
			Dice::Values(Uploader::$_sizes, function ($q) {
				#src/jotun/php/file/Uploader.hx:66: lines 66-68
				if (Boot::dynamicField($q, 'path') !== null) {
					#src/jotun/php/file/Uploader.hx:67: characters 6-24
					Uploader::createPath(Boot::dynamicField($q, 'path'));
				}
			});
			#src/jotun/php/file/Uploader.hx:70: characters 4-30
			Uploader::_log("image:sizes", $sizes);
		}
		#src/jotun/php/file/Uploader.hx:73: characters 3-12
		Uploader::_verify();
		#src/jotun/php/file/Uploader.hx:75: characters 3-15
		return Uploader::$files;
	}

	/**
	 * @internal
	 * @access private
	 */
	static public function __hx__init ()
	{
		static $called = false;
		if ($called) return;
		$called = true;


		self::$files = new FileCollection();
	}
}

Boot::registerClass(Uploader::class, 'jotun.php.file.Uploader');
Uploader::__hx__init();
