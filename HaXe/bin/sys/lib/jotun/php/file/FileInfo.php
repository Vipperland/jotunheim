<?php
/**
 * Generated by Haxe 4.3.6
 */

namespace jotun\php\file;

use \php\Boot;
use \jotun\utils\Dice;

/**
 * ...
 * @author Rafael Moreira <rafael@gateofsirius.com>
 */
class FileInfo {
	/**
	 * @var mixed
	 */
	public $error;
	/**
	 * @var bool
	 */
	public $image;
	/**
	 * @var string
	 */
	public $input;
	/**
	 * @var string
	 */
	public $output;
	/**
	 * @var IFileSizeInfo[]|\Array_hx
	 */
	public $sizes;
	/**
	 * @var string
	 */
	public $type;

	/**
	 * @param string $type
	 * @param string $input
	 * @param string $output
	 * 
	 * @return void
	 */
	public function __construct ($type, $input, $output) {
		#src/jotun/php/file/FileInfo.hx:22: characters 3-19
		$this->type = $type;
		#src/jotun/php/file/FileInfo.hx:23: characters 3-23
		$this->output = $output;
		#src/jotun/php/file/FileInfo.hx:24: characters 3-21
		$this->input = $input;
	}

	/**
	 * @param string $id
	 * 
	 * @return IFileSizeInfo
	 */
	public function get ($id) {
		#src/jotun/php/file/FileInfo.hx:28: lines 28-30
		$roll = Dice::Values($this->sizes, function ($v) use (&$id) {
			#src/jotun/php/file/FileInfo.hx:29: characters 4-21
			return $v->id === $id;
		});
		#src/jotun/php/file/FileInfo.hx:31: characters 10-44
		if ($roll->completed) {
			#src/jotun/php/file/FileInfo.hx:31: characters 27-31
			return null;
		} else {
			#src/jotun/php/file/FileInfo.hx:31: characters 34-44
			return $roll->value;
		}
	}

	/**
	 * @return bool
	 */
	public function get_image () {
		#src/jotun/php/file/FileInfo.hx:36: characters 10-28
		$__hx__switch = (\mb_strtolower($this->type));
		if ($__hx__switch === "bmp" || $__hx__switch === "gif" || $__hx__switch === "jpg" || $__hx__switch === "png" || $__hx__switch === "wbmp") {
			#src/jotun/php/file/FileInfo.hx:38: characters 5-16
			return true;
		} else {
			#src/jotun/php/file/FileInfo.hx:40: characters 5-17
			return false;
		}
	}
}

Boot::registerClass(FileInfo::class, 'jotun.php.file.FileInfo');
Boot::registerGetters('jotun\\php\\file\\FileInfo', [
	'image' => true
]);
