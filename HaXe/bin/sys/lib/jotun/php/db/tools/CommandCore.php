<?php
/**
 * Generated by Haxe 4.3.6
 */

namespace jotun\php\db\tools;

use \php\Boot;
use \jotun\utils\Dice;
use \jotun\errors\ErrorDescriptior;
use \jotun\php\db\pdo\Statement;
use \php\_Boot\HxString;

/**
 * ...
 * @author Rafael Moreira
 */
class CommandCore implements ICommandCore {
	/**
	 * @var ErrorDescriptior[]|\Array_hx
	 */
	public $_errors;
	/**
	 * @var \Closure
	 */
	public $_log;
	/**
	 * @var mixed[]|\Array_hx
	 */
	public $_parameters;
	/**
	 * @var string
	 */
	public $_query;
	/**
	 * @var ErrorDescriptior[]|\Array_hx
	 */
	public $errors;
	/**
	 * @var mixed[]|\Array_hx
	 */
	public $result;
	/**
	 * @var Statement
	 */
	public $statement;
	/**
	 * @var bool
	 */
	public $success;

	/**
	 * @param Statement $statement
	 * @param string $query
	 * @param mixed[]|\Array_hx $parameters
	 * @param ErrorDescriptior[]|\Array_hx $errors
	 * @param \Closure $log
	 * 
	 * @return void
	 */
	public function __construct ($statement, $query, $parameters, $errors, $log) {
		#src/jotun/php/db/tools/CommandCore.hx:38: characters 3-13
		$this->_log = $log;
		#src/jotun/php/db/tools/CommandCore.hx:39: characters 3-19
		$this->_errors = $errors;
		#src/jotun/php/db/tools/CommandCore.hx:40: characters 3-17
		$this->_query = $query;
		#src/jotun/php/db/tools/CommandCore.hx:41: characters 3-29
		$this->statement = $statement;
		#src/jotun/php/db/tools/CommandCore.hx:42: lines 42-44
		if ($parameters !== null) {
			#src/jotun/php/db/tools/CommandCore.hx:43: characters 4-20
			$this->bind($parameters);
		}
	}

	/**
	 * @param mixed $v
	 * 
	 * @return int
	 */
	public function _getType ($v) {
		#src/jotun/php/db/tools/CommandCore.hx:48: lines 48-60
		if (is_string($v)) {
			#src/jotun/php/db/tools/CommandCore.hx:49: characters 4-46
			return \PDO::PARAM_STR;
		} else if ((is_float($v) || is_int($v))) {
			#src/jotun/php/db/tools/CommandCore.hx:51: characters 4-46
			return \PDO::PARAM_STR;
		} else if (Boot::isOfType($v, Boot::getClass('Int'))) {
			#src/jotun/php/db/tools/CommandCore.hx:53: characters 4-46
			return \PDO::PARAM_INT;
		} else if (is_bool($v)) {
			#src/jotun/php/db/tools/CommandCore.hx:55: characters 4-46
			return \PDO::PARAM_INT;
		} else if ($v === null) {
			#src/jotun/php/db/tools/CommandCore.hx:57: characters 4-47
			return \PDO::PARAM_NULL;
		} else {
			#src/jotun/php/db/tools/CommandCore.hx:59: characters 4-46
			return \PDO::PARAM_STR;
		}
	}

	/**
	 * @param mixed[]|\Array_hx $parameters
	 * 
	 * @return void
	 */
	public function bind ($parameters) {
		#src/jotun/php/db/tools/CommandCore.hx:63: lines 63-71
		$_gthis = $this;
		#src/jotun/php/db/tools/CommandCore.hx:64: characters 3-27
		$this->_parameters = $parameters;
		#src/jotun/php/db/tools/CommandCore.hx:65: lines 65-70
		if ($this->statement !== null) {
			#src/jotun/php/db/tools/CommandCore.hx:66: lines 66-69
			Dice::All($parameters, function ($p, $v) use (&$_gthis) {
				#src/jotun/php/db/tools/CommandCore.hx:67: characters 5-45
				$_gthis->statement->bindValue(1 + $p, $v, $_gthis->_getType($v));
				#src/jotun/php/db/tools/CommandCore.hx:68: characters 5-40
				\Reflect::setField($_gthis->_parameters, $p, $v);
			});
		}
	}

	/**
	 * @return ErrorDescriptior[]|\Array_hx
	 */
	public function get_errors () {
		#src/jotun/php/db/tools/CommandCore.hx:35: characters 58-72
		return $this->_errors;
	}

	/**
	 * @return string
	 */
	public function log () {
		#src/jotun/php/db/tools/CommandCore.hx:73: lines 73-87
		$_gthis = $this;
		#src/jotun/php/db/tools/CommandCore.hx:74: characters 3-44
		$r = HxString::split($this->_query, "?");
		#src/jotun/php/db/tools/CommandCore.hx:75: lines 75-85
		if ($this->_parameters !== null) {
			#src/jotun/php/db/tools/CommandCore.hx:76: lines 76-84
			Dice::All($r, function ($p, $v) use (&$r, &$_gthis) {
				#src/jotun/php/db/tools/CommandCore.hx:77: lines 77-83
				if ($p < $_gthis->_parameters->length) {
					#src/jotun/php/db/tools/CommandCore.hx:78: characters 6-37
					$e = ($_gthis->_parameters->arr[$p] ?? null);
					#src/jotun/php/db/tools/CommandCore.hx:79: lines 79-81
					if (is_string($e)) {
						#src/jotun/php/db/tools/CommandCore.hx:80: characters 7-24
						$e = "\"" . \Std::string($e) . "\"";
					}
					#src/jotun/php/db/tools/CommandCore.hx:82: characters 6-18
					$r->offsetSet($p, ($v??'null') . \Std::string($e));
				}
			});
		}
		#src/jotun/php/db/tools/CommandCore.hx:86: characters 3-20
		return $r->join("");
	}

	/**
	 * @return string
	 */
	public function query () {
		#src/jotun/php/db/tools/CommandCore.hx:90: characters 3-16
		return $this->_query;
	}
}

Boot::registerClass(CommandCore::class, 'jotun.php.db.tools.CommandCore');
Boot::registerGetters('jotun\\php\\db\\tools\\CommandCore', [
	'errors' => true
]);
