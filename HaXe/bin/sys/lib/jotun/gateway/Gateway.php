<?php
/**
 * Generated by Haxe 4.3.0
 */

namespace jotun\gateway;

use \php\Boot;
use \jotun\gateway\domain\Output;
use \jotun\Jotun;
use \jotun\tools\Utils;
use \jotun\gateway\database\DataAccess;

/**
 * ...
 * @author Rafael Moreira
 */
class Gateway {
	/**
	 * @var Gateway
	 */
	static public $_ME;

	/**
	 * @return Gateway
	 */
	public static function getInstance () {
		#src+extras/gateway/jotun/gateway/Gateway.hx:20: characters 3-13
		return Gateway::$_ME;
	}

	/**
	 * @param mixed $TGateway
	 * @param mixed $TDomain
	 * @param mixed $TDataAccess
	 * @param mixed $TInput
	 * @param mixed $TOutput
	 * @param bool $maintenance
	 * 
	 * @return void
	 */
	public static function init ($TGateway, $TDomain, $TDataAccess, $TInput, $TOutput, $maintenance) {
		#src+extras/gateway/jotun/gateway/Gateway.hx:33: characters 3-29
		new $TGateway->phpClassName();
		#src+extras/gateway/jotun/gateway/Gateway.hx:35: characters 3-24
		Jotun::$header->access();
		#src+extras/gateway/jotun/gateway/Gateway.hx:38: characters 3-28
		new $TOutput->phpClassName();
		#src+extras/gateway/jotun/gateway/Gateway.hx:41: characters 3-27
		new $TInput->phpClassName();
		#src+extras/gateway/jotun/gateway/Gateway.hx:44: lines 44-59
		if (!$maintenance) {
			#src+extras/gateway/jotun/gateway/Gateway.hx:46: lines 46-48
			if (Utils::boolean(Boot::dynamicField(Jotun::$domain->params, 'log'))) {
				#src+extras/gateway/jotun/gateway/Gateway.hx:47: characters 5-37
				Output::getInstance()->enableLog();
			}
			#src+extras/gateway/jotun/gateway/Gateway.hx:50: characters 4-33
			new $TDataAccess->phpClassName();
			#src+extras/gateway/jotun/gateway/Gateway.hx:52: lines 52-54
			if (Utils::boolean(Boot::dynamicField(Jotun::$domain->params, 'dblog'))) {
				#src+extras/gateway/jotun/gateway/Gateway.hx:53: characters 5-41
				DataAccess::getInstance()->enableLog();
			}
			#src+extras/gateway/jotun/gateway/Gateway.hx:56: characters 4-29
			new $TDomain->phpClassName();
		} else {
			#src+extras/gateway/jotun/gateway/Gateway.hx:58: characters 4-59
			Output::getInstance()->error(1);
		}
		#src+extras/gateway/jotun/gateway/Gateway.hx:62: characters 3-31
		Output::getInstance()->flush();
	}

	/**
	 * @return void
	 */
	public function __construct () {
		#src+extras/gateway/jotun/gateway/Gateway.hx:24: lines 24-28
		if (Gateway::$_ME === null) {
			#src+extras/gateway/jotun/gateway/Gateway.hx:25: characters 4-14
			Gateway::$_ME = $this;
		} else {
			#src+extras/gateway/jotun/gateway/Gateway.hx:27: characters 4-9
			throw new \ErrorException("Gateway is a Singleton");
		}
	}
}

Boot::registerClass(Gateway::class, 'jotun.gateway.Gateway');
