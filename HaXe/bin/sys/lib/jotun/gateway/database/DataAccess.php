<?php
/**
 * Generated by Haxe 4.3.0
 */

namespace jotun\gateway\database;

use \php\Boot;
use \jotun\logical\Flag;
use \jotun\Jotun;
use \jotun\php\db\Token;
use \jotun\php\db\objects\IDataTable;
use \jotun\gateway\objects\OutputCoreCarrier;

/**
 * ...
 * @author
 */
class DataAccess extends OutputCoreCarrier {
	/**
	 * @var DataAccess
	 */
	static public $_instance;

	/**
	 * @var mixed
	 */
	public $_tables;

	/**
	 * @return DataAccess
	 */
	public static function getInstance () {
		#src+extras/gateway/jotun/gateway/database/DataAccess.hx:20: characters 3-19
		return DataAccess::$_instance;
	}

	/**
	 * @param Token $token
	 * 
	 * @return void
	 */
	public function __construct ($token) {
		#src+extras/gateway/jotun/gateway/database/DataAccess.hx:30: lines 30-32
		if (DataAccess::$_instance !== null) {
			#src+extras/gateway/jotun/gateway/database/DataAccess.hx:31: characters 4-9
			throw new \ErrorException("DataAccess is a Singleton");
		}
		#src+extras/gateway/jotun/gateway/database/DataAccess.hx:33: characters 3-19
		DataAccess::$_instance = $this;
		#src+extras/gateway/jotun/gateway/database/DataAccess.hx:34: lines 34-38
		if (!Jotun::$gate->isOpen()) {
			#src+extras/gateway/jotun/gateway/database/DataAccess.hx:35: lines 35-37
			if (!Jotun::$gate->open($token)->isOpen()) {
				#src+extras/gateway/jotun/gateway/database/DataAccess.hx:36: characters 5-56
				$this->get_output()->setStatus(100);
			}
		}
		#src+extras/gateway/jotun/gateway/database/DataAccess.hx:39: characters 3-10
		parent::__construct();
	}

	/**
	 * @param string $message
	 * 
	 * @return void
	 */
	final public function _dbLog ($message) {
		#src+extras/gateway/jotun/gateway/database/DataAccess.hx:60: characters 3-29
		$this->get_output()->log($message, "sql");
	}

	/**
	 * @param int $code
	 * 
	 * @return void
	 */
	final public function _error ($code) {
		#src+extras/gateway/jotun/gateway/database/DataAccess.hx:26: characters 3-21
		$this->get_output()->error($code);
	}

	/**
	 * @param string $table
	 * @param mixed $Def
	 * 
	 * @return IDataTable
	 */
	final public function _tryAssemble ($table, $Def) {
		#src+extras/gateway/jotun/gateway/database/DataAccess.hx:63: lines 63-75
		$_gthis = $this;
		#src+extras/gateway/jotun/gateway/database/DataAccess.hx:64: lines 64-74
		return $this->execute(function () use (&$table, &$_gthis, &$Def) {
			#src+extras/gateway/jotun/gateway/database/DataAccess.hx:65: characters 4-51
			$table1 = Jotun::$gate->table($table);
			#src+extras/gateway/jotun/gateway/database/DataAccess.hx:66: lines 66-73
			if ($table1 !== null) {
				#src+extras/gateway/jotun/gateway/database/DataAccess.hx:67: characters 5-34
				return $table1->setClassObj($Def);
			} else {
				#src+extras/gateway/jotun/gateway/database/DataAccess.hx:69: lines 69-71
				if ($_gthis->get_output()->getStatus() === 200) {
					#src+extras/gateway/jotun/gateway/database/DataAccess.hx:70: characters 6-53
					$_gthis->get_output()->error(102);
				}
				#src+extras/gateway/jotun/gateway/database/DataAccess.hx:72: characters 5-17
				return null;
			}
		});
	}

	/**
	 * @param mixed $handler
	 * 
	 * @return mixed
	 */
	public function execute ($handler) {
		#src+extras/gateway/jotun/gateway/database/DataAccess.hx:47: lines 47-49
		if ($this->isConnected()) {
			#src+extras/gateway/jotun/gateway/database/DataAccess.hx:48: characters 4-20
			return $handler();
		}
		#src+extras/gateway/jotun/gateway/database/DataAccess.hx:50: characters 3-14
		return null;
	}

	/**
	 * @return bool
	 */
	final public function isConnected () {
		#src+extras/gateway/jotun/gateway/database/DataAccess.hx:43: characters 10-50
		if (DataAccess::$_instance !== null) {
			#src+extras/gateway/jotun/gateway/database/DataAccess.hx:43: characters 31-50
			return Jotun::$gate->isOpen();
		} else {
			#src+extras/gateway/jotun/gateway/database/DataAccess.hx:43: characters 10-50
			return false;
		}
	}

	/**
	 * @param int $value
	 * 
	 * @return void
	 */
	public function setOptions ($value) {
		#src+extras/gateway/jotun/gateway/database/DataAccess.hx:54: lines 54-56
		if (Flag::FTest($value, 8)) {
			#src+extras/gateway/jotun/gateway/database/DataAccess.hx:55: characters 4-29
			Jotun::$gate->listen(Boot::getInstanceClosure($this, '_dbLog'));
		}
	}
}

Boot::registerClass(DataAccess::class, 'jotun.gateway.database.DataAccess');
