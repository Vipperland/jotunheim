<?php
/**
 * Generated by Haxe 4.3.0
 */

namespace jotun\gateway\database;

use \jotun\gateway\domain\OutputCore;
use \php\Boot;
use \jotun\Jotun;
use \jotun\php\db\Token;
use \jotun\php\db\objects\IDataTable;

/**
 * ...
 * @author
 */
class DataAccess {
	/**
	 * @var DataAccess
	 */
	static public $_instance;

	/**
	 * @param mixed $handler
	 * 
	 * @return mixed
	 */
	public static function execute ($handler) {
		#src+extras/gateway/jotun/gateway/database/DataAccess.hx:21: lines 21-23
		if (DataAccess::$_instance !== null) {
			#src+extras/gateway/jotun/gateway/database/DataAccess.hx:22: characters 4-20
			return $handler();
		}
		#src+extras/gateway/jotun/gateway/database/DataAccess.hx:24: characters 3-66
		OutputCore::getInstance()->error(101);
		#src+extras/gateway/jotun/gateway/database/DataAccess.hx:25: characters 3-15
		return null;
	}

	/**
	 * @return DataAccess
	 */
	public static function getInstance () {
		#src+extras/gateway/jotun/gateway/database/DataAccess.hx:17: characters 3-19
		return DataAccess::$_instance;
	}

	/**
	 * @param Token $token
	 * 
	 * @return void
	 */
	public function __construct ($token) {
		#src+extras/gateway/jotun/gateway/database/DataAccess.hx:33: lines 33-35
		if (DataAccess::$_instance !== null) {
			#src+extras/gateway/jotun/gateway/database/DataAccess.hx:34: characters 4-9
			throw new \ErrorException("DataAccess is a Singleton");
		}
		#src+extras/gateway/jotun/gateway/database/DataAccess.hx:36: characters 3-19
		DataAccess::$_instance = $this;
		#src+extras/gateway/jotun/gateway/database/DataAccess.hx:37: lines 37-41
		if (!Jotun::$gate->isOpen()) {
			#src+extras/gateway/jotun/gateway/database/DataAccess.hx:38: lines 38-40
			if (!Jotun::$gate->open($token)->isOpen()) {
				#src+extras/gateway/jotun/gateway/database/DataAccess.hx:39: characters 5-46
				$this->_error(100);
			}
		}
	}

	/**
	 * @param string $message
	 * 
	 * @return void
	 */
	public function _dbLog ($message) {
		#src+extras/gateway/jotun/gateway/database/DataAccess.hx:53: characters 3-47
		OutputCore::getInstance()->log($message, "sql");
	}

	/**
	 * @param int $code
	 * 
	 * @return void
	 */
	public function _error ($code) {
		#src+extras/gateway/jotun/gateway/database/DataAccess.hx:29: characters 3-39
		OutputCore::getInstance()->error($code);
	}

	/**
	 * @param string $table
	 * @param mixed $Def
	 * 
	 * @return IDataTable
	 */
	public function _tryAssemble ($table, $Def) {
		#src+extras/gateway/jotun/gateway/database/DataAccess.hx:57: lines 57-66
		return DataAccess::execute(function () use (&$table, &$Def) {
			#src+extras/gateway/jotun/gateway/database/DataAccess.hx:58: characters 4-51
			$table1 = Jotun::$gate->table($table);
			#src+extras/gateway/jotun/gateway/database/DataAccess.hx:59: lines 59-65
			if ($table1 !== null) {
				#src+extras/gateway/jotun/gateway/database/DataAccess.hx:60: characters 5-27
				$table1->setClassObj($Def);
				#src+extras/gateway/jotun/gateway/database/DataAccess.hx:61: characters 5-17
				return $table1;
			} else {
				#src+extras/gateway/jotun/gateway/database/DataAccess.hx:63: characters 5-70
				OutputCore::getInstance()->error(102);
				#src+extras/gateway/jotun/gateway/database/DataAccess.hx:64: characters 5-17
				return null;
			}
		});
	}

	/**
	 * @return void
	 */
	public function enableLog () {
		#src+extras/gateway/jotun/gateway/database/DataAccess.hx:49: characters 3-28
		Jotun::$gate->listen(Boot::getInstanceClosure($this, '_dbLog'));
	}

	/**
	 * @return bool
	 */
	public function isConnected () {
		#src+extras/gateway/jotun/gateway/database/DataAccess.hx:45: characters 3-27
		return DataAccess::$_instance !== null;
	}
}

Boot::registerClass(DataAccess::class, 'jotun.gateway.database.DataAccess');
