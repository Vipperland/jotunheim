<?php
/**
 * Generated by Haxe 4.3.0
 */

namespace jotun\gateway\database\objects;

use \jotun\serial\Packager;
use \php\_Boot\HxAnon;
use \php\Boot;
use \jotun\gateway\utils\Omnitools;
use \jotun\php\db\Clause;
use \jotun\gateway\domain\Output;
use \jotun\Jotun;
use \jotun\tools\Utils;
use \jotun\gateway\domain\zones\pass\IPassCarrier;

/**
 * ...
 * @author
 */
class ZoneCoreSession extends ZoneCoreObject {
	/**
	 * @var string
	 */
	const OAUTH_HEAD_IN = "(y)=>";
	/**
	 * @var string
	 */
	const OAUTH_HEAD_OUT = "(y)<=";

	/**
	 * @var float
	 */
	public $_ctd;
	/**
	 * @var string
	 */
	public $_device;
	/**
	 * @var string
	 */
	public $_ip;
	/**
	 * @var string
	 */
	public $_token;
	/**
	 * @var string
	 */
	public $_uid;
	/**
	 * @var float
	 */
	public $_upd;
	/**
	 * @var IPassCarrier
	 */
	public $carrier;

	/**
	 * @return void
	 */
	public function __construct () {
		#server/jotun/gateway/database/objects/ZoneCoreSession.hx:44: characters 3-10
		parent::__construct();
	}

	/**
	 * @return IPassCarrier
	 */
	public function _loadCarrier () {
		#server/jotun/gateway/database/objects/ZoneCoreSession.hx:40: characters 3-14
		return null;
	}

	/**
	 * @return void
	 */
	public function drop () {
		#server/jotun/gateway/database/objects/ZoneCoreSession.hx:102: lines 102-106
		$_gthis = $this;
		#server/jotun/gateway/database/objects/ZoneCoreSession.hx:103: lines 103-105
		$this->RunSQL(function () use (&$_gthis) {
			#server/jotun/gateway/database/objects/ZoneCoreSession.hx:104: characters 4-68
			$_gthis->get__database()->get_user_session()->deleteOne(Clause::EQUAL("_token", $_gthis->_token));
		});
	}

	/**
	 * @return void
	 */
	public function dropAll () {
		#server/jotun/gateway/database/objects/ZoneCoreSession.hx:108: lines 108-114
		$_gthis = $this;
		#server/jotun/gateway/database/objects/ZoneCoreSession.hx:109: lines 109-113
		if ($this->isValid()) {
			#server/jotun/gateway/database/objects/ZoneCoreSession.hx:110: lines 110-112
			$this->RunSQL(function () use (&$_gthis) {
				#server/jotun/gateway/database/objects/ZoneCoreSession.hx:111: characters 5-65
				$_gthis->get__database()->get_user_session()->deleteOne(Clause::EQUAL("_uid", $_gthis->_uid));
			});
		}
	}

	/**
	 * @return void
	 */
	public function exposeToken () {
		#server/jotun/gateway/database/objects/ZoneCoreSession.hx:121: characters 3-53
		$token = "(y)<=";
		#server/jotun/gateway/database/objects/ZoneCoreSession.hx:122: lines 122-127
		if ($this->isValid()) {
			#server/jotun/gateway/database/objects/ZoneCoreSession.hx:123: characters 4-19
			$token = ($token??'null') . ($this->_token??'null');
		} else {
			#server/jotun/gateway/database/objects/ZoneCoreSession.hx:125: characters 4-22
			$token = ($token??'null') . "EXPIRED";
			#server/jotun/gateway/database/objects/ZoneCoreSession.hx:126: characters 4-10
			$this->drop();
		}
		#server/jotun/gateway/database/objects/ZoneCoreSession.hx:128: characters 3-56
		Output::get_ME()->registerOAuth(Packager::encodeBase64($token));
	}

	/**
	 * @param bool $force
	 * 
	 * @return void
	 */
	public function exposeUserInfo ($force = null) {
		#server/jotun/gateway/database/objects/ZoneCoreSession.hx:132: lines 132-134
		if (($this->get_carrier() === null) && $force) {
			#server/jotun/gateway/database/objects/ZoneCoreSession.hx:133: characters 4-18
			$this->_loadCarrier();
		}
		#server/jotun/gateway/database/objects/ZoneCoreSession.hx:135: lines 135-137
		if ($this->get_carrier() !== null) {
			#server/jotun/gateway/database/objects/ZoneCoreSession.hx:136: characters 4-56
			Output::get_ME()->object("carrier")->info = $this->get_carrier()->getInfo();
		}
	}

	/**
	 * @return string
	 */
	public function getOAuthCode () {
		#server/jotun/gateway/database/objects/ZoneCoreSession.hx:117: characters 3-33
		return "(y)<=" . ($this->_token??'null');
	}

	/**
	 * @return IPassCarrier
	 */
	public function get_carrier () {
		#server/jotun/gateway/database/objects/ZoneCoreSession.hx:36: characters 3-24
		return $this->_loadCarrier();
	}

	/**
	 * @return bool
	 */
	public function isValid () {
		#server/jotun/gateway/database/objects/ZoneCoreSession.hx:90: characters 3-52
		return (Omnitools::timeFromNow(168) - $this->_upd) > 0;
	}

	/**
	 * @param string $oauth
	 * 
	 * @return bool
	 */
	public function loadFromToken ($oauth) {
		#server/jotun/gateway/database/objects/ZoneCoreSession.hx:74: lines 74-87
		$_gthis = $this;
		#server/jotun/gateway/database/objects/ZoneCoreSession.hx:75: lines 75-77
		$current = $this->RunSQL(function () use (&$_gthis, &$oauth) {
			#server/jotun/gateway/database/objects/ZoneCoreSession.hx:76: characters 4-77
			return $_gthis->get__database()->get_user_session()->findOne("*", Clause::EQUAL("_token", $oauth));
		});
		#server/jotun/gateway/database/objects/ZoneCoreSession.hx:78: lines 78-85
		if ($current !== null) {
			#server/jotun/gateway/database/objects/ZoneCoreSession.hx:79: characters 4-23
			$this->_uid = $current->_uid;
			#server/jotun/gateway/database/objects/ZoneCoreSession.hx:80: characters 4-27
			$this->_token = $current->_token;
			#server/jotun/gateway/database/objects/ZoneCoreSession.hx:81: characters 4-21
			$this->_ip = $current->_ip;
			#server/jotun/gateway/database/objects/ZoneCoreSession.hx:82: characters 4-29
			$this->_device = $current->_device;
			#server/jotun/gateway/database/objects/ZoneCoreSession.hx:83: characters 4-23
			$this->_ctd = $current->_ctd;
			#server/jotun/gateway/database/objects/ZoneCoreSession.hx:84: characters 4-23
			$this->_upd = $current->_upd;
		}
		#server/jotun/gateway/database/objects/ZoneCoreSession.hx:86: characters 3-25
		return $current !== null;
	}

	/**
	 * @return void
	 */
	public function refresh () {
		#server/jotun/gateway/database/objects/ZoneCoreSession.hx:93: lines 93-100
		$_gthis = $this;
		#server/jotun/gateway/database/objects/ZoneCoreSession.hx:94: lines 94-99
		if (($this->_uid !== null) && ($this->_token !== null)) {
			#server/jotun/gateway/database/objects/ZoneCoreSession.hx:95: characters 4-30
			$this->_upd = Omnitools::timeNow();
			#server/jotun/gateway/database/objects/ZoneCoreSession.hx:96: lines 96-98
			$this->RunSQL(function () use (&$_gthis) {
				#server/jotun/gateway/database/objects/ZoneCoreSession.hx:97: characters 5-82
				$_gthis->get__database()->get_user_session()->updateOne(new HxAnon(["_upd" => $_gthis->_upd]), Clause::EQUAL("_token", $_gthis->_token));
			});
		}
	}

	/**
	 * @return void
	 */
	public function revoke () {
		#server/jotun/gateway/database/objects/ZoneCoreSession.hx:141: characters 3-92
		Output::get_ME()->registerOAuth(Packager::encodeBase64("(y)<=" . "REVOKE"));
	}

	/**
	 * @param string $id
	 * @param string $device
	 * 
	 * @return bool
	 */
	public function save ($id, $device) {
		#server/jotun/gateway/database/objects/ZoneCoreSession.hx:47: lines 47-72
		$_gthis = $this;
		#server/jotun/gateway/database/objects/ZoneCoreSession.hx:48: lines 48-71
		if (($this->_token === null) && ($this->_uid === null)) {
			#server/jotun/gateway/database/objects/ZoneCoreSession.hx:49: characters 4-13
			$this->_uid = $id;
			#server/jotun/gateway/database/objects/ZoneCoreSession.hx:50: characters 4-39
			$this->_token = Omnitools::genRandomIDx65();
			#server/jotun/gateway/database/objects/ZoneCoreSession.hx:51: characters 4-29
			$this->_ip = Jotun::$domain->client;
			#server/jotun/gateway/database/objects/ZoneCoreSession.hx:52: characters 4-43
			$this->_device = Utils::getValidOne($device, "");
			#server/jotun/gateway/database/objects/ZoneCoreSession.hx:53: characters 4-30
			$this->_ctd = Omnitools::timeNow();
			#server/jotun/gateway/database/objects/ZoneCoreSession.hx:54: characters 4-15
			$this->_upd = $this->_ctd;
			#server/jotun/gateway/database/objects/ZoneCoreSession.hx:55: lines 55-68
			if (Boot::dynamicField($this->RunSQL(function () use (&$id, &$_gthis) {
				#server/jotun/gateway/database/objects/ZoneCoreSession.hx:56: lines 56-63
				return $_gthis->get__database()->get_user_session()->add(new HxAnon([
					"_uid" => $id,
					"_token" => $_gthis->_token,
					"_ip" => $_gthis->_ip,
					"_device" => $_gthis->_device,
					"_ctd" => $_gthis->_ctd,
					"_upd" => $_gthis->_upd,
				]));
			}), 'success')) {
				#server/jotun/gateway/database/objects/ZoneCoreSession.hx:65: characters 5-16
				return true;
			} else {
				#server/jotun/gateway/database/objects/ZoneCoreSession.hx:67: characters 5-53
				return $this->_error(2000);
			}
		} else {
			#server/jotun/gateway/database/objects/ZoneCoreSession.hx:70: characters 4-56
			return $this->_error(2010);
		}
	}
}

Boot::registerClass(ZoneCoreSession::class, 'jotun.gateway.database.objects.ZoneCoreSession');
Boot::registerGetters('jotun\\gateway\\database\\objects\\ZoneCoreSession', [
	'carrier' => true
]);
