<?php
/**
 * Generated by Haxe 4.3.0
 */

namespace jotun\gateway\domain;

use \jotun\gateway\domain\zones\ZoneServices;
use \php\Boot;
use \jotun\Jotun;
use \jotun\tools\Utils;
use \jotun\utils\Dice;
use \php\_Boot\HxString;

/**
 * ...
 * @author
 */
class DomainCore extends ZoneServices {
	/**
	 * @var DomainCore
	 */
	static public $_me;

	/**
	 * @return DomainCore
	 */
	public static function getInstance () {
		#src+extras/gateway/jotun/gateway/domain/DomainCore.hx:21: characters 3-13
		return DomainCore::$_me;
	}

	/**
	 * Will carry zone parameters based on service pieces. Ex.:
	 * 	/api/user => UserZone
	 * 		/api/user/login => UserLoginZone
	 * 		/api/user/register => UserRegisterZone
	 * 		/api/user/test => UserRegisterTestZone
	 * 	/api/session => session
	 *
	 *  Note:
	 * 	Zones can required a read or write access pass see UserRegisterZone constructor
	 *
	 * 
	 * @return void
	 */
	public function __construct () {
		#src+extras/gateway/jotun/gateway/domain/DomainCore.hx:38: lines 38-40
		if (DomainCore::$_me !== null) {
			#src+extras/gateway/jotun/gateway/domain/DomainCore.hx:39: characters 4-9
			throw new \ErrorException("Domain is a Singleton");
		}
		#src+extras/gateway/jotun/gateway/domain/DomainCore.hx:41: characters 3-13
		DomainCore::$_me = $this;
		#src+extras/gateway/jotun/gateway/domain/DomainCore.hx:42: characters 3-10
		parent::__construct();
		#src+extras/gateway/jotun/gateway/domain/DomainCore.hx:43: characters 3-29
		$this->carry($this, $this->getServices());
		#src+extras/gateway/jotun/gateway/domain/DomainCore.hx:44: characters 3-54
		\Reflect::deleteField(Jotun::$domain->params, "service");
	}

	/**
	 * @return string[]|\Array_hx
	 */
	public function getServices () {
		#src+extras/gateway/jotun/gateway/domain/DomainCore.hx:48: characters 3-75
		$service = Utils::getValidOne(Boot::dynamicField(Jotun::$domain->params, 'service'), "");
		#src+extras/gateway/jotun/gateway/domain/DomainCore.hx:49: characters 3-48
		return Dice::nullSkip(HxString::split($service, "/"));
	}
}

Boot::registerClass(DomainCore::class, 'jotun.gateway.domain.DomainCore');
