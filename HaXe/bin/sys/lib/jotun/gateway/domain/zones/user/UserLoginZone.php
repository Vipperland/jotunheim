<?php
/**
 * Generated by Haxe 4.3.0
 */

namespace jotun\gateway\domain\zones\user;

use \jotun\serial\Packager;
use \jotun\gateway\domain\zones\ZoneServices;
use \jotun\gateway\database\objects\PA_UserSession;
use \php\Boot;
use \jotun\php\db\Clause;
use \jotun\gateway\utils\Validator;

/**
 * ...
 * @author
 */
class UserLoginZone extends ZoneServices {
	/**
	 * @var string
	 */
	public $_email;
	/**
	 * @var string
	 */
	public $_pwd;

	/**
	 * @return void
	 */
	public function __construct () {
		#server/jotun/gateway/domain/zones/user/UserLoginZone.hx:22: characters 3-10
		parent::__construct();
	}

	/**
	 * @param string[]|\Array_hx $data
	 * 
	 * @return void
	 */
	public function _execute ($data) {
		#server/jotun/gateway/domain/zones/user/UserLoginZone.hx:26: lines 26-45
		if ($this->tryLoadFromInput()) {
			#server/jotun/gateway/domain/zones/user/UserLoginZone.hx:27: characters 23-36
			$user = $this->get_database()->get_user();
			#server/jotun/gateway/domain/zones/user/UserLoginZone.hx:28: characters 5-35
			$user1 = Clause::EQUAL("_email", $this->_email);
			#server/jotun/gateway/domain/zones/user/UserLoginZone.hx:27: lines 27-30
			$user2 = $user->findOne("*", Clause::AND(\Array_hx::wrap([
				$user1,
				Clause::CUSTOM("id=(SELECT _uid, _flags FROM rp_user_password WHERE _key=\"" . ($this->_pwd??'null') . "\" LIMIT 1)"),
			])));
			#server/jotun/gateway/domain/zones/user/UserLoginZone.hx:31: lines 31-44
			if ($user2 !== null) {
				#server/jotun/gateway/domain/zones/user/UserLoginZone.hx:32: characters 5-55
				$session = new PA_UserSession();
				#server/jotun/gateway/domain/zones/user/UserLoginZone.hx:33: lines 33-40
				if ($session->save($user2->id, Boot::dynamicField($this->get_input()->object, 'device'))) {
					#server/jotun/gateway/domain/zones/user/UserLoginZone.hx:34: lines 34-36
					if ($this->get_input()->session !== null) {
						#server/jotun/gateway/domain/zones/user/UserLoginZone.hx:35: characters 7-27
						$this->get_input()->session->drop();
					}
					#server/jotun/gateway/domain/zones/user/UserLoginZone.hx:37: characters 6-27
					$session->exposeToken();
					#server/jotun/gateway/domain/zones/user/UserLoginZone.hx:38: characters 6-27
					$session->setUser($user2);
					#server/jotun/gateway/domain/zones/user/UserLoginZone.hx:39: characters 6-30
					$session->exposeUserInfo();
				}
			} else {
				#server/jotun/gateway/domain/zones/user/UserLoginZone.hx:43: characters 5-45
				$this->error(2020);
			}
		}
		#server/jotun/gateway/domain/zones/user/UserLoginZone.hx:46: characters 3-23
		parent::_execute($data);
	}

	/**
	 *
	 * @return
	 * 
	 * @return bool
	 */
	public function tryLoadFromInput () {
		#server/jotun/gateway/domain/zones/user/UserLoginZone.hx:54: lines 54-58
		if (Validator::email(Boot::dynamicField($this->get_input()->object, 'email'))) {
			#server/jotun/gateway/domain/zones/user/UserLoginZone.hx:55: characters 4-31
			$this->_email = Boot::dynamicField($this->get_input()->object, 'email');
		} else {
			#server/jotun/gateway/domain/zones/user/UserLoginZone.hx:57: characters 4-42
			return $this->error(100);
		}
		#server/jotun/gateway/domain/zones/user/UserLoginZone.hx:59: lines 59-63
		if (Validator::password(Boot::dynamicField($this->get_input()->object, 'pwd'))) {
			#server/jotun/gateway/domain/zones/user/UserLoginZone.hx:60: characters 4-53
			$this->_pwd = Packager::md5Encode(Boot::dynamicField($this->get_input()->object, 'pwd'), true);
		} else {
			#server/jotun/gateway/domain/zones/user/UserLoginZone.hx:62: characters 4-45
			return $this->error(120);
		}
		#server/jotun/gateway/domain/zones/user/UserLoginZone.hx:64: characters 3-14
		return true;
	}
}

Boot::registerClass(UserLoginZone::class, 'jotun.gateway.domain.zones.user.UserLoginZone');
