<?php
/**
 * Generated by Haxe 4.3.0
 */

namespace jotun\gateway\domain;

use \jotun\serial\Packager;
use \php\Boot;
use \jotun\gateway\database\objects\ZoneCoreSession;
use \jotun\Jotun;
use \jotun\tools\Utils;
use \php\_Boot\HxString;

/**
 * ...
 * @author Rafael Moreira
 */
class BasicSessionInput extends InputCore {
	/**
	 * @var int
	 */
	public $_tokenStatus;
	/**
	 * @var ZoneCoreSession
	 */
	public $session;

	/**
	 * @return void
	 */
	public function __construct () {
		#src+extras/basic+gateway/jotun/gateway/domain/BasicSessionInput.hx:23: characters 3-10
		parent::__construct();
		#src+extras/basic+gateway/jotun/gateway/domain/BasicSessionInput.hx:24: characters 3-19
		$this->_loadAuthToken();
	}

	/**
	 * @param int $status
	 * 
	 * @return void
	 */
	public function _disposeSession ($status) {
		#src+extras/basic+gateway/jotun/gateway/domain/BasicSessionInput.hx:35: characters 3-24
		$this->_tokenStatus = $status;
		#src+extras/basic+gateway/jotun/gateway/domain/BasicSessionInput.hx:36: lines 36-39
		if ($this->session !== null) {
			#src+extras/basic+gateway/jotun/gateway/domain/BasicSessionInput.hx:37: characters 4-20
			$this->session->revoke();
			#src+extras/basic+gateway/jotun/gateway/domain/BasicSessionInput.hx:38: characters 4-18
			$this->session = null;
		}
	}

	/**
	 * @return void
	 */
	public function _loadAuthToken () {
		#src+extras/basic+gateway/jotun/gateway/domain/BasicSessionInput.hx:43: characters 3-54
		$authorization = Jotun::$header->getOAuth();
		#src+extras/basic+gateway/jotun/gateway/domain/BasicSessionInput.hx:44: lines 44-46
		if (($this->_testToken !== null) && !Utils::isValid($authorization)) {
			#src+extras/basic+gateway/jotun/gateway/domain/BasicSessionInput.hx:45: characters 4-30
			$authorization = $this->_testToken;
		}
		#src+extras/basic+gateway/jotun/gateway/domain/BasicSessionInput.hx:47: lines 47-67
		if (Utils::isValid($authorization)) {
			#src+extras/basic+gateway/jotun/gateway/domain/BasicSessionInput.hx:48: characters 4-56
			$authorization = Packager::decodeBase64($authorization);
			#src+extras/basic+gateway/jotun/gateway/domain/BasicSessionInput.hx:49: lines 49-64
			if (\mb_substr($authorization, 0, mb_strlen("(y)=>")) === "(y)=>") {
				#src+extras/basic+gateway/jotun/gateway/domain/BasicSessionInput.hx:50: characters 5-104
				$authorization = HxString::substring($authorization, mb_strlen("(y)=>"), mb_strlen($authorization));
				#src+extras/basic+gateway/jotun/gateway/domain/BasicSessionInput.hx:51: characters 5-36
				$this->session = new ZoneCoreSession();
				#src+extras/basic+gateway/jotun/gateway/domain/BasicSessionInput.hx:52: lines 52-61
				if ($this->session->load($authorization)) {
					#src+extras/basic+gateway/jotun/gateway/domain/BasicSessionInput.hx:53: lines 53-58
					if ($this->session->isValid()) {
						#src+extras/basic+gateway/jotun/gateway/domain/BasicSessionInput.hx:54: characters 7-28
						$this->session->exposeToken();
					} else {
						#src+extras/basic+gateway/jotun/gateway/domain/BasicSessionInput.hx:57: characters 7-55
						$this->_disposeSession(1060);
					}
				} else {
					#src+extras/basic+gateway/jotun/gateway/domain/BasicSessionInput.hx:60: characters 6-51
					$this->_disposeSession(1020);
				}
			} else {
				#src+extras/basic+gateway/jotun/gateway/domain/BasicSessionInput.hx:63: characters 5-53
				$this->_disposeSession(1010);
			}
		} else {
			#src+extras/basic+gateway/jotun/gateway/domain/BasicSessionInput.hx:66: characters 4-53
			$this->_disposeSession(1000);
		}
	}

	/**
	 * @return int
	 */
	public function getTokenSatus () {
		#src+extras/basic+gateway/jotun/gateway/domain/BasicSessionInput.hx:19: characters 3-22
		return $this->_tokenStatus;
	}

	/**
	 * @param string $token
	 * 
	 * @return void
	 */
	public function setTestToken ($token) {
		#src+extras/basic+gateway/jotun/gateway/domain/BasicSessionInput.hx:28: characters 3-21
		$this->_testToken = $token;
		#src+extras/basic+gateway/jotun/gateway/domain/BasicSessionInput.hx:29: lines 29-31
		if ($this->_testToken !== null) {
			#src+extras/basic+gateway/jotun/gateway/domain/BasicSessionInput.hx:30: characters 4-20
			$this->_loadAuthToken();
		}
	}
}

Boot::registerClass(BasicSessionInput::class, 'jotun.gateway.domain.BasicSessionInput');
