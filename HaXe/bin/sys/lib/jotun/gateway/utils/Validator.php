<?php
/**
 * Generated by Haxe 4.3.0
 */

namespace jotun\gateway\utils;

use \php\Boot;

/**
 * ...
 * @author
 */
class Validator {
	/**
	 * @param mixed $value
	 * 
	 * @return bool
	 */
	public static function date ($value) {
		#server/jotun/gateway/utils/Validator.hx:30: lines 30-32
		if ($value === null) {
			#server/jotun/gateway/utils/Validator.hx:31: characters 4-16
			return false;
		}
		#server/jotun/gateway/utils/Validator.hx:33: lines 33-35
		if ((is_float($value) || is_int($value))) {
			#server/jotun/gateway/utils/Validator.hx:34: characters 4-20
			return $value > 0;
		}
		#server/jotun/gateway/utils/Validator.hx:36: characters 10-92
		if (!(new \EReg("\\d{1,2}/\\d{1,2}/\\d{4}", ""))->match($value)) {
			#server/jotun/gateway/utils/Validator.hx:36: characters 53-92
			return (new \EReg("\\d{4}/\\d{1,2}/\\d{1,2}", ""))->match($value);
		} else {
			#server/jotun/gateway/utils/Validator.hx:36: characters 10-92
			return true;
		}
	}

	/**
	 * @param string $value
	 * 
	 * @return bool
	 */
	public static function email ($value) {
		#server/jotun/gateway/utils/Validator.hx:10: characters 3-147
		return (new \EReg("^[a-z0-9!'#\$%&*+/=?^_`{|}~-]+(?:\\.[a-z0-9!'#\$%&*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-zA-Z]{2,}\$", "giu"))->match($value);
	}

	/**
	 * @param string $value
	 * 
	 * @return bool
	 */
	public static function name ($value) {
		#server/jotun/gateway/utils/Validator.hx:18: characters 3-27
		return mb_strlen($value) >= 2;
	}

	/**
	 * @param string $value
	 * 
	 * @return bool
	 */
	public static function number ($value) {
		#server/jotun/gateway/utils/Validator.hx:14: characters 3-34
		return (new \EReg("^\\d{1,}\$", ""))->match($value);
	}

	/**
	 * @param string $value
	 * 
	 * @return bool
	 */
	public static function password ($value) {
		#server/jotun/gateway/utils/Validator.hx:26: characters 3-93
		return (new \EReg("^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}|(?=.*?[#?!@\$%^&*-_])\$", "giu"))->match($value);
	}

	/**
	 * @param string $value
	 * 
	 * @return bool
	 */
	public static function username ($value) {
		#server/jotun/gateway/utils/Validator.hx:22: characters 3-48
		return (new \EReg("^[A-Za-z0-9._-]{6,24}\$", ""))->match($value);
	}
}

Boot::registerClass(Validator::class, 'jotun.gateway.utils.Validator');
