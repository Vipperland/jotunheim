<?php
/**
 * Generated by Haxe 4.3.4
 */

namespace jotun\gaming\actions;

use \php\_Boot\HxAnon;
use \php\Boot;
use \jotun\utils\Dice;
use \jotun\objects\QueryGroup;

/**
 * ...
 * @author
 */
class RequirementQueryGroup extends QueryGroup {
	/**
	 * @return void
	 */
	public function __construct () {
		#src/jotun/gaming/actions/RequirementQueryGroup.hx:13: characters 3-10
		parent::__construct();
	}

	/**
	 * @param mixed $query
	 * @param EventContext $context
	 * 
	 * @return mixed
	 */
	public function eventRun ($query, $context) {
		#src/jotun/gaming/actions/RequirementQueryGroup.hx:16: lines 16-41
		$_gthis = $this;
		#src/jotun/gaming/actions/RequirementQueryGroup.hx:17: characters 3-27
		$result = new HxAnon();
		#src/jotun/gaming/actions/RequirementQueryGroup.hx:18: lines 18-39
		if ($context->debug) {
			#src/jotun/gaming/actions/RequirementQueryGroup.hx:19: characters 4-20
			$idx = 0;
			#src/jotun/gaming/actions/RequirementQueryGroup.hx:20: lines 20-32
			Dice::Values($query, function ($single) use (&$_gthis, &$context, &$result, &$idx) {
				#src/jotun/gaming/actions/RequirementQueryGroup.hx:21: lines 21-31
				if ($single !== "@result") {
					#src/jotun/gaming/actions/RequirementQueryGroup.hx:22: characters 6-46
					$context->registerRequirementQuery($single);
					#src/jotun/gaming/actions/RequirementQueryGroup.hx:23: lines 23-30
					Dice::All($_gthis->units, function ($p, $o) use (&$context, &$single, &$result, &$idx) {
						#src/jotun/gaming/actions/RequirementQueryGroup.hx:24: characters 7-28
						$o->ioContext = $context;
						#src/jotun/gaming/actions/RequirementQueryGroup.hx:25: lines 25-27
						if ($context->debug) {
							#src/jotun/gaming/actions/RequirementQueryGroup.hx:26: characters 8-103
							$context->addLog(1, ($single??'null') . "[" . ($p??'null') . "] == " . (Boot::dynamicField($o->proc(\Array_hx::wrap([
								"@result",
								$single,
							]), $result), 'result')[$idx]??'null'));
						}
						#src/jotun/gaming/actions/RequirementQueryGroup.hx:28: characters 7-12
						$idx += 1;
						#src/jotun/gaming/actions/RequirementQueryGroup.hx:29: characters 7-16
						$o->flush();
					});
				}
			});
		} else {
			#src/jotun/gaming/actions/RequirementQueryGroup.hx:34: lines 34-38
			Dice::Values($this->units, function ($o) use (&$query, &$context, &$result) {
				#src/jotun/gaming/actions/RequirementQueryGroup.hx:35: characters 5-26
				$o->ioContext = $context;
				#src/jotun/gaming/actions/RequirementQueryGroup.hx:36: characters 5-26
				$o->proc($query, $result);
				#src/jotun/gaming/actions/RequirementQueryGroup.hx:37: characters 5-14
				$o->flush();
			});
		}
		#src/jotun/gaming/actions/RequirementQueryGroup.hx:40: characters 3-16
		return $result;
	}
}

Boot::registerClass(RequirementQueryGroup::class, 'jotun.gaming.actions.RequirementQueryGroup');
