<?php

// Generated by Haxe 3.4.7
class Test_PHP {
	public function __construct(){}
	static function main() {
		$buff = (new _hx_array(array()));
		jotun_utils_Dice::All(jotun_Jotun::$header->getClientHeaders(), array(new _hx_lambda(array(&$buff), "Test_PHP_0"), 'execute'), null);
		$tmp = "===================================================== Parameters: (Method:" . _hx_string_or_null(jotun_Jotun::$domain->getRequestMethod()) . ")";
		$buff->push($tmp);
		jotun_utils_Dice::All(jotun_Jotun::$domain->params, array(new _hx_lambda(array(&$buff), "Test_PHP_1"), 'execute'), null);
		$buff->push("===================================================== APPLICATION/JSON Content-Type");
		$tmp1 = jotun_tools_Utils::sruString(jotun_Jotun::$domain->input);
		$buff->push($tmp1);
		$buff->push("===================================================== Files");
		$buff->push(jotun_php_file_Uploader::save("./uploads/", _hx_anonymous(array("thumb" => _hx_anonymous(array("width" => 240, "height" => 160, "create" => true)), "small" => _hx_anonymous(array("width" => 480, "height" => 320, "create" => true)), "medium" => _hx_anonymous(array("width" => 960, "height" => 640, "create" => true)), "large" => _hx_anonymous(array("width" => 1280, "height" => 960, "create" => true)))))->{"list"});
		$buff->push("===================================================== Database Connect");
		$tmp2 = jotun_Jotun::$gate;
		$tmp2->open(jotun_db_Token::localhost("rp_afterfall", null, null, null), true);
		if(jotun_Jotun::$gate->isOpen()) {
			$buff->push("Successful!");
			$buff->push("users: ");
			jotun_Jotun::$gate->table("rp_users")->setClassObj(_hx_qtype("User"));
			$u = jotun_Jotun::$gate->table("rp_users")->findAll(null, null, null)->data[0];
			$buff->push($u);
		} else {
			$tmp3 = jotun_Jotun::$gate->get_errors();
			$buff->push($tmp3);
		}
		jotun_Jotun::$header->setJSON($buff, null);
	}
	function __toString() { return 'Test_PHP'; }
}
function Test_PHP_0(&$buff, $p, $v) {
	{
		$buff->push(_hx_string_or_null($p) . ": " . _hx_string_or_null($v));
	}
}
function Test_PHP_1(&$buff, $p1, $v1) {
	{
		$buff->push(_hx_string_or_null($p1) . ": " . _hx_string_or_null($v1));
	}
}
