<?php

// Generated by Haxe 3.4.7
class Test_PHP {
	public function __construct(){}
	static function main() {
		haxe_Log::trace("===================================================== Headers", _hx_anonymous(array("fileName" => "Test_PHP.hx", "lineNumber" => 18, "className" => "Test_PHP", "methodName" => "main")));
		sirius_utils_Dice::All(sirius_Sirius::$domain->data, array(new _hx_lambda(array(), "Test_PHP_0"), 'execute'), null);
		haxe_Log::trace("===================================================== Parameters: GET/POST", _hx_anonymous(array("fileName" => "Test_PHP.hx", "lineNumber" => 22, "className" => "Test_PHP", "methodName" => "main")));
		sirius_utils_Dice::All(sirius_Sirius::$domain->params, array(new _hx_lambda(array(), "Test_PHP_1"), 'execute'), null);
		haxe_Log::trace("===================================================== APPLICATION/JSON Content-Type", _hx_anonymous(array("fileName" => "Test_PHP.hx", "lineNumber" => 26, "className" => "Test_PHP", "methodName" => "main")));
		$tmp = (property_exists("haxe_Log", "trace") ? haxe_Log::$trace: array("haxe_Log", "trace"));
		$tmp1 = sirius_tools_Utils::sruString(sirius_Sirius::$domain->input);
		call_user_func_array($tmp, array($tmp1, _hx_anonymous(array("fileName" => "Test_PHP.hx", "lineNumber" => 27, "className" => "Test_PHP", "methodName" => "main"))));
		haxe_Log::trace("===================================================== Files", _hx_anonymous(array("fileName" => "Test_PHP.hx", "lineNumber" => 29, "className" => "Test_PHP", "methodName" => "main")));
		$tmp2 = (property_exists("haxe_Log", "trace") ? haxe_Log::$trace: array("haxe_Log", "trace"));
		call_user_func_array($tmp2, array(sirius_php_file_Uploader::save((new _hx_array(array((new _hx_array(array(1280, 720))), (new _hx_array(array(720, 480))), (new _hx_array(array(480, 360)))))))->{"list"}, _hx_anonymous(array("fileName" => "Test_PHP.hx", "lineNumber" => 30, "className" => "Test_PHP", "methodName" => "main"))));
		$tmp3 = sirius_Sirius::$gate;
		$tmp3->open(sirius_db_Token::localhost("decorador", null, null, null), true);
		if(sirius_Sirius::$gate->isOpen()) {
			haxe_Log::trace("HANDSHAKE OK", _hx_anonymous(array("fileName" => "Test_PHP.hx", "lineNumber" => 34, "className" => "Test_PHP", "methodName" => "main")));
			$t = sirius_Sirius::$gate->table("project_review");
			$t->add(_hx_anonymous(array("project_id" => 1, "content" => "test", "content_alt" => "another test", "active" => true, "created_at" => 0, "updated_at" => 0)), null, null, null);
			$t->findAll(null, null, null)->each(array(new _hx_lambda(array(), "Test_PHP_2"), 'execute'));
		} else {
			$tmp4 = (property_exists("haxe_Log", "trace") ? haxe_Log::$trace: array("haxe_Log", "trace"));
			$tmp5 = sirius_Sirius::$gate->get_errors();
			call_user_func_array($tmp4, array($tmp5, _hx_anonymous(array("fileName" => "Test_PHP.hx", "lineNumber" => 41, "className" => "Test_PHP", "methodName" => "main"))));
		}
	}
	function __toString() { return 'Test_PHP'; }
}
function Test_PHP_0($p, $v) {
	{
		haxe_Log::trace(_hx_string_or_null($p) . ": " . _hx_string_or_null($v), _hx_anonymous(array("fileName" => "Test_PHP.hx", "lineNumber" => 20, "className" => "Test_PHP", "methodName" => "main")));
	}
}
function Test_PHP_1($p1, $v1) {
	{
		haxe_Log::trace(_hx_string_or_null($p1) . ": " . _hx_string_or_null($v1), _hx_anonymous(array("fileName" => "Test_PHP.hx", "lineNumber" => 24, "className" => "Test_PHP", "methodName" => "main")));
	}
}
function Test_PHP_2($o) {
	{
		haxe_Log::trace(_hx_field($o, "id"), _hx_anonymous(array("fileName" => "Test_PHP.hx", "lineNumber" => 38, "className" => "Test_PHP", "methodName" => "main")));
	}
}
