<?php

// Generated by Haxe 3.4.7
class Lambda {
	public function __construct(){}
	static function harray($it) {
		$a = new _hx_array(array());
		{
			$i = $it->iterator();
			while($i->hasNext()) {
				$i1 = $i->next();
				$a->push($i1);
				unset($i1);
			}
		}
		return $a;
	}
	static function indexOf($it, $v) {
		$i = 0;
		{
			$v2 = $it->iterator();
			while($v2->hasNext()) {
				$v21 = $v2->next();
				if((is_object($_t = $v) && ($_t instanceof Enum) ? $_t == $v21 : _hx_equal($_t, $v21))) {
					return $i;
				}
				$i = $i + 1;
				unset($v21,$_t);
			}
		}
		return -1;
	}
	function __toString() { return 'Lambda'; }
}
