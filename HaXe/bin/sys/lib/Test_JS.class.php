<?php

// Generated by Haxe 3.4.7
class Test_JS {
	public function __construct(){}
	static function main() {
		jotun_gaming_dataform_DataCollection::register(_hx_qtype("jotun.gaming.dataform.DataObject"), "test", (new _hx_array(array("name", "email"))));
		jotun_gaming_dataform_DataCollection::register(_hx_qtype("jotun.gaming.dataform.DataObject"), "info", (new _hx_array(array("color"))));
		$t = _hx_deref((new _hx_array(array("test 000001 0:alpha|1:user@alpha.com", "@info 0:yellow", "@info 0:blue", "test 000002 0:beta|1:user@beta.com", "@info 0:gray", "test 000003 0:gama|1:user@gama.com", "@info 0:cyan", "test 000004 0:omega|1:user@omega.com"))))->join("\x0D");
		$colA = new jotun_gaming_dataform_DataCollection();
		$colB = new jotun_gaming_dataform_DataCollection();
		$cA = $colA->parse($t);
		$rA = $colA->stringify(null);
		$tmp = (property_exists("haxe_Log", "trace") ? haxe_Log::$trace: array("haxe_Log", "trace"));
		$tmp1 = "colA data(" . _hx_string_rec($cA, "") . ") \x0D\x0A\x09" . _hx_string_or_null(_hx_explode("\x0D", $rA)->join("\x0D\x0A\x09"));
		call_user_func_array($tmp, array($tmp1, _hx_anonymous(array("fileName" => "Test_JS.hx", "lineNumber" => 34, "className" => "Test_JS", "methodName" => "main"))));
		$cB = $colB->parse($t);
		$rB = $colB->stringify(null);
		$tmp2 = (property_exists("haxe_Log", "trace") ? haxe_Log::$trace: array("haxe_Log", "trace"));
		$tmp3 = "colB data(" . _hx_string_rec($cB, "") . ") \x0D\x0A\x09" . _hx_string_or_null(_hx_explode("\x0D", $rB)->join("\x0D\x0A\x09"));
		call_user_func_array($tmp2, array($tmp3, _hx_anonymous(array("fileName" => "Test_JS.hx", "lineNumber" => 38, "className" => "Test_JS", "methodName" => "main"))));
		$tmp4 = (property_exists("haxe_Log", "trace") ? haxe_Log::$trace: array("haxe_Log", "trace"));
		$tmp5 = null;
		$tmp6 = null;
		if($t === $rA) {
			$tmp6 = $t === $rB;
		} else {
			$tmp6 = false;
		}
		if($tmp6) {
			$tmp5 = $rA === $rB;
		} else {
			$tmp5 = false;
		}
		$tmp7 = "Data Match? \x0D\x0A\x09" . Std::string($tmp5);
		call_user_func_array($tmp4, array($tmp7, _hx_anonymous(array("fileName" => "Test_JS.hx", "lineNumber" => 40, "className" => "Test_JS", "methodName" => "main"))));
	}
	function __toString() { return 'Test_JS'; }
}
